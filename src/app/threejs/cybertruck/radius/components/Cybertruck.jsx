/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/cybertruck/cybertruck.gltf 
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, shaderMaterial } from '@react-three/drei'
import { basePath } from '@/lib/constants';
import * as THREE from "three";
import { extend } from '@react-three/fiber'

import stripesVertext from "../shaders/stripes.vertex.glsl"
import stripesFragment from "../shaders/stripes.fragment.glsl"
import { useControls } from 'leva';
import { useFrame } from '@react-three/fiber';

export function Cybertruck(props) {
  const { nodes, materials } = useGLTF(`${basePath}/models/cybertruck/cybertruck.gltf`)
  
  const ref = useRef();

  const stripesControls = useControls('stripes', {
    alpha: {
      min: 0,
      max: 1,
      value: 0.5,
    },
    multiplier: {
      min: 1,
      max: 142,
      value: 42
    },
    colorA: "#FF0000",
    colorB: "#FFFF00",
  })

  useFrame((state) => {
    ref.current.uTime = state.clock.elapsedTime;
  })

  useEffect(() => {
    materials.lights.toneMapped = false;
    materials.warninglights.toneMapped = false;
    materials.warninglights.color = new THREE.Color(82, 0, 0);
  });

const StripesShaderMaterial = shaderMaterial(
  {
    uAlpha: 0.5,
    uMultiplier: 42,
    uColorA: new THREE.Color(0x000000),
    uColorB: new THREE.Color(0x000000),
    uTime: 0,
  },
  stripesVertext,
  stripesFragment
)

extend({ StripesShaderMaterial })
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.interior001.geometry} material={materials.lights} />
      <mesh geometry={nodes.interior001_1.geometry} castShadow>
        <meshStandardMaterial {...materials.body} />
      </mesh>
      <mesh geometry={nodes.interior001_2.geometry}>
        <meshStandardMaterial
          opacity={0.92}
          envMapIntensity={1}
          transparent
          roughness={0.2}
          color={"black"}
        />
      </mesh>
      <mesh
        geometry={nodes.interior001_3.geometry}
        material={materials.glassframes}
        castShadow
      />
      <mesh
        geometry={nodes.interior001_4.geometry}
        material={materials.warninglights}
      />
      <mesh
        geometry={nodes.interior001_5.geometry}
        material={materials.black}
        castShadow
      />
      {/* BODY MESH -> SHADER */}
      <mesh geometry={nodes.interior001_6.geometry}>
        <stripesShaderMaterial 
          ref={ref}
          transparent 
          uAlpha={stripesControls.alpha} 
          uMultiplier={stripesControls.multiplier} 
          uColorA={stripesControls.colorA}
          uColorB={stripesControls.colorB}
        />
      </mesh>

      <mesh geometry={nodes.steer.geometry} material={materials.gray} />
      <mesh
        geometry={nodes.tires001.geometry}
        material={materials.tires}
        castShadow
      />
      <mesh
        geometry={nodes.tires001_1.geometry}
        material={materials.rims}
        castShadow
      />
    </group>
  )
}

useGLTF.preload(`${basePath}/models/cybertruck/cybertruck.gltf`)
