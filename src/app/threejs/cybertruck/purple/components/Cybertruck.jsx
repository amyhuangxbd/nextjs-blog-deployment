/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/cybertruck/cybertruck.gltf 
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, shaderMaterial } from '@react-three/drei'
import { basePath } from '@/lib/constants';
import * as THREE from "three";
import { extend } from '@react-three/fiber'

export function Cybertruck(props) {
  const { nodes, materials } = useGLTF(`${basePath}/models/cybertruck/cybertruck.gltf`)
  
  const ref = useRef();
  useEffect(() => {
    materials.lights.toneMapped = false;
    materials.warninglights.toneMapped = false;
    materials.warninglights.color = new THREE.Color(82, 0, 0);
  });

const TestShaderMaterial = shaderMaterial(
  {  },
  // vertex shader
  /*glsl*/`
    varying vec2 vUv;
    void main() {
      vUv = uv;
      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
    }
  `,
  // fragment shader
  /*glsl*/`
    uniform float time;
    uniform vec3 color;
    varying vec2 vUv;
    void main() {
      gl_FragColor.rgba = vec4(vUv, 1.0, 1.0);
    }
  `
)

extend({ TestShaderMaterial })
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.interior001.geometry} material={materials.lights} />
      <mesh geometry={nodes.interior001_1.geometry} castShadow>
        <meshStandardMaterial {...materials.body} />
      </mesh>
      <mesh geometry={nodes.interior001_2.geometry}>
        <meshStandardMaterial
          opacity={0.92}
          envMapIntensity={1}
          transparent
          roughness={0.2}
          color={"black"}
        />
      </mesh>
      <mesh
        geometry={nodes.interior001_3.geometry}
        material={materials.glassframes}
        castShadow
      />
      <mesh
        geometry={nodes.interior001_4.geometry}
        material={materials.warninglights}
      />
      <mesh
        geometry={nodes.interior001_5.geometry}
        material={materials.black}
        castShadow
      />
      {/* BODY MESH -> SHADER */}
      <mesh geometry={nodes.interior001_6.geometry}>
        <testShaderMaterial opacity={0.2} transparent />
      </mesh>

      <mesh geometry={nodes.steer.geometry} material={materials.gray} />
      <mesh
        geometry={nodes.tires001.geometry}
        material={materials.tires}
        castShadow
      />
      <mesh
        geometry={nodes.tires001_1.geometry}
        material={materials.rims}
        castShadow
      />
    </group>
  )
}

useGLTF.preload(`${basePath}/models/cybertruck/cybertruck.gltf`)
